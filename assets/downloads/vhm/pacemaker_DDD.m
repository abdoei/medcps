function pace_para=pacemaker_DDD(pace_para, A_get, V_get, pace_inter)
% This function update parameters for the pacemaker in one time stamp
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Inputs:
% A_get: Boolean, Atrium event sensed. Signal generated by the interface
%        function
% V_get: Boolean, Ventricle event sensed. Signal generated by the interface
%        function
% pace_para: Cell array, parameters for the DDD pacemaker
%    
%    Format: {'Component_name', State_index, current_Corresponding_timer,
%            default_corresponding_timer, corresponding_output_signal}
%
%        Components and their corresponding outputs:
%                  name                             output
%        LRI(Lowest rate interval)                  A_pace
%        AVI(Atrialventricular interval)            V_pace
%        ARP(Atrium repolarization period)          A_sense
%        VRP(Ventricular repolarization period)     V_sense
%        URI(Upper rate Interval)                    none
%
% Outputs:
% pace_para: updated version of the input
% A_pace: Boolean, Atrial pacing signal sending to the interface function
% V_pace: Boolean, Ventricle pacing singal sending to the interface
% function

% local signal variables
a_s=0;
a_p=0;
v_s=0;
v_p=0;

% LRI

% if v_sense or v_pace
if pace_para{2,5} || pace_para{4,5}
    % reset LRI timer
    pace_para{1,3}=pace_para{1,4};
end
% if timer didn't run out
if pace_para{1,3}>0
    % timer
    pace_para{1,3}=pace_para{1,3}-pace_inter;
    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    %------Changed---------------
    % if AEI reached
    if pace_para{1,3}==pace_para{2,4} && pace_para{2,2}==1
        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        % pace atrium
        a_p=1;
    end
else
    % reset timer
    pace_para{1,3}=pace_para{1,4};
end

% AVI

switch pace_para{2,2}
    case 1 % Idle
        % if a_sense or a_pace
        if pace_para{1,5} || pace_para{3,5}
            % go to AVI state
            pace_para{2,2}=2;
        end
    case 2 % AVI
        % if timer didn't run out
        if pace_para{2,3}>0
            % timer
            pace_para{2,3}=pace_para{2,3}-pace_inter;
        else
            if pace_para{5,2}==1
                % reset AVI timer
                pace_para{2,3}=pace_para{2,4};
                % pace ventricle
                v_p=1;
                % go back to Idle state
                pace_para{2,2}=1;
            else
                % extended AVI, minus value will be used by URI timer to
                % deliver V_pace
                pace_para{2,3}=pace_para{2,3}-pace_inter;
            end
        end
        % if v_sense
        if pace_para{4,5}
            % reset AVI timer
            pace_para{2,3}=pace_para{2,4};
            % go back to Idle state
            pace_para{2,2}=1;
        end
end

% ARP

switch pace_para{3,2}
    case 1 % Idle
        % if atrium event sensed
        if A_get
            % if AVI is idle
            if pace_para{2,2}==1
                % a_sense
                a_s=1;
            end
        end
        % if v_sense or v_pace
        if pace_para{2,5} || pace_para{4,5}
            % go to ARP state
            pace_para{3,2}=2;
        end
    case 2 % ARP
        % if timer didn't run out
        if pace_para{3,3}>0
            % timer
            pace_para{3,3}=pace_para{3,3}-pace_inter;
        else
            % reset ARP timer
            pace_para{3,3}=pace_para{3,4};
            % go back to Idle state
            pace_para{3,2}=1;
        end
    
end

% VRP

switch pace_para{4,2}
    case 1 % Idle
        % if ventricle event sensed
        if V_get
            % v_sense
            v_s=1;
            % go to VRP state
            pace_para{4,2}=2;
        end
        % if v_pace
        if pace_para{2,5}
            % go to VRP state
            pace_para{4,2}=2;
        end
         
    case 2 % VRP
        % if timer didn't run out
        if pace_para{4,3}>0
            % timer
            pace_para{4,3}=pace_para{4,3}-pace_inter;
        else
            % reset timer
            pace_para{4,3}=pace_para{4,4};
            % go back to Idle state
            pace_para{4,2}=1;
        end
    
end

% URI

switch pace_para{4,2}
    case 1 % Idle
        % if v_pace or v_sense
        if pace_para{2,5} || pace_para{4,5}
            % go to URI state
            pace_para{5,2}=2;
        end
         
    case 2 % URI
        % if timer didn't run out
        if pace_para{5,3}>0
            % timer
            pace_para{5,3}=pace_para{5,3}-pace_inter;
        else
            % reset timer
            pace_para{5,3}=pace_para{5,4};
            % if extended AVI
            if pace_para{2,3}<0
                % deliver pacing
                v_p=1;
                % reset AVI value
                pace_para{2,3}=pace_para{2,4};
            end
            % go back to Idle state
            pace_para{5,2}=1;
        end
    
end

% update the local variables to global variables
temp={a_p;v_p;a_s;v_s;0};

pace_para=[pace_para(:,1:4),temp];





